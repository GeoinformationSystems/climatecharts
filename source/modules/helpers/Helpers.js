// ############################################################################
// HELPERS
// ############################################################################

class Helpers
{
  // ##########################################################################
  // PUBLIC MEMBERS
  // ##########################################################################

  // ==========================================================================
  // Constructor
  // ==========================================================================

  constructor(main)
  {
    this._main = main
  }


  // ==========================================================================
  // Mixin two objects (override A -> default B)
  // ==========================================================================

  mixin(objA, objB)
  {
    let objMixin = this.deepCopy(objB)
    for (var key in objA)
      objMixin[key] = objA[key]
    return objMixin
  }


  // ==========================================================================
  // Deep copy of an object
  // ==========================================================================

  deepCopy(obj)
  {
    return JSON.parse(JSON.stringify(obj));
  }


  // ==========================================================================
  // Check if Integer
  // ==========================================================================

  checkIfInt(num)
  {
    if (num === parseInt(num, 10))
      return true
    else
      return false
  }


  // ==========================================================================
  // Swap values
  // ==========================================================================

  swapValues (valArray)
  {
    let tempVal = valArray[0]
    valArray[0] = valArray[1]
    valArray[1] = tempVal
    return valArray
  }


}
